*** BUG ***
+ NPHI>MMAX*2 is right condition for the sampling theorem to apply.	(16/10/2008)
+ Bug found in SHT.c : here are the correct versions of LiM() and LM marcros :	(16/10/2008)
	#define LiM(l,im) ( (im*(2*LMAX+2 -MRES*(im+1)))/2 + l )
	#define LM(l,m) ( (m*(2*LMAX+2 -(m+MRES)))/(2*MRES) + l )
+ Bug found in SHT.c : LMAX odd was treated incorrectly. (25/10/2008)
+ BUG: xspp disc seems ok for n = z, and n.z=0. others seem ok but not sure...

*** Optimizations ***

+ OpenMP parallelization : 8 threads on r2d2 cluster gives a x 5.45 speedup compared to 1 thread (Navier-Stokes only)
     code is validated: exactly same result with 8 threads or without OpenMP.

- mask
- try blas ?
- time different implementations and chose the fastest...
- use blas ???

? grid : try full NR*NLM matrices, loops are more efficient but what about cache ???
? wouldn't it be better to store Tlm and Plm with m contiguous for each l ???
? (- use "alloca()" to allocate temp memory on the stack with variable lengths) // ultrafast but not ANSI

*** Features ***
+ velocity field computation
+ inner core differential rotation

- BACKGROUND boundary-condition should be added
- Boundary condition handling should be improved !!!

- compute spectrum and use them...
-+ boundary conditions dependence should be checked and improved.
-   ghost point could be mapped with a pointer !!! (or not)

- euler explicit (order 1), better suited for fast waves.
- variable time-step
- penalization method for complex geometry.

? conducting outer shell
? insulating inner core


*** SHT.c
- SHT : implement even and odd l sub-cases.
	should not change array sizes. only SHT function calls may (must) be different.
-!!!	grid.c should also treat even/odd sub-cases. !!!

- FFTW : out-of-place is faster than in-place. switch ? http://www.fftw.org/speed/CoreDuo-3.0GHz-icc64/
- try blas ?

- SHT : NLAT odd could be improved a little bit.
- SHT : use DCT space, keep low NLAT but regular grid and Gauss quadrature (??)
	synthesis should be faster, analysis same speed.

+ NPHI = 1 is now possible, and does not call FFTW.
	only 10% performance increase ! I would have expected more...
+ NLAT odd is now allowed
	special treatment in SHT function. (but could be improved)
